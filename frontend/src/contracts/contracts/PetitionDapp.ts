/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.98.0
  Forc version: 0.66.5
  Fuel-Core version: 0.40.0
*/

import { Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Option, Enum } from "./common";

export enum CampaignErrorInput { CampaignEnded = 'CampaignEnded', CampaignHasBeenCancelled = 'CampaignHasBeenCancelled', DeadlineNotReached = 'DeadlineNotReached' };
export enum CampaignErrorOutput { CampaignEnded = 'CampaignEnded', CampaignHasBeenCancelled = 'CampaignHasBeenCancelled', DeadlineNotReached = 'DeadlineNotReached' };
export enum CampaignStateInput { Cancelled = 'Cancelled', Successful = 'Successful', Progress = 'Progress' };
export enum CampaignStateOutput { Cancelled = 'Cancelled', Successful = 'Successful', Progress = 'Progress' };
export enum CreationErrorInput { DeadlineMustBeInTheFuture = 'DeadlineMustBeInTheFuture' };
export enum CreationErrorOutput { DeadlineMustBeInTheFuture = 'DeadlineMustBeInTheFuture' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export enum UserErrorInput { SuccessfulCampaign = 'SuccessfulCampaign', AlreadySigned = 'AlreadySigned', InvalidID = 'InvalidID', UnauthorizedUser = 'UnauthorizedUser', UserHasNotSigned = 'UserHasNotSigned' };
export enum UserErrorOutput { SuccessfulCampaign = 'SuccessfulCampaign', AlreadySigned = 'AlreadySigned', InvalidID = 'InvalidID', UnauthorizedUser = 'UnauthorizedUser', UserHasNotSigned = 'UserHasNotSigned' };

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type CampaignInput = { id: BigNumberish };
export type CampaignOutput = { id: BN };
export type CampaignInfoInput = { author: IdentityInput, state: CampaignStateInput, deadline: BigNumberish, total_signs: BigNumberish };
export type CampaignInfoOutput = { author: IdentityOutput, state: CampaignStateOutput, deadline: BN, total_signs: BN };
export type CancelledCampaignEventInput = { campaign_id: BigNumberish };
export type CancelledCampaignEventOutput = { campaign_id: BN };
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type CreatedCampaignEventInput = { author: IdentityInput, campaign_info: CampaignInfoInput, campaign_id: BigNumberish };
export type CreatedCampaignEventOutput = { author: IdentityOutput, campaign_info: CampaignInfoOutput, campaign_id: BN };
export type SignedEventInput = { campaign_id: BigNumberish, user: IdentityInput };
export type SignedEventOutput = { campaign_id: BN, user: IdentityOutput };
export type SignsInput = { sign: BigNumberish, campaign_id: BigNumberish };
export type SignsOutput = { sign: number, campaign_id: BN };
export type SuccessfulCampaignEventInput = { campaign_id: BigNumberish, total_signs: BigNumberish };
export type SuccessfulCampaignEventOutput = { campaign_id: BN, total_signs: BN };
export type UnsignedEventInput = { campaign_id: BigNumberish, user: IdentityInput };
export type UnsignedEventOutput = { campaign_id: BN, user: IdentityOutput };

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "enum errors::CampaignError",
      "concreteTypeId": "59df221b1082423e99f01b4031f103e0d02189049bb2f3df44c4f39ea3eeb745",
      "metadataTypeId": 2
    },
    {
      "type": "enum errors::CreationError",
      "concreteTypeId": "b9d3180d4d8354fec9d767ca1d4144faf473449f3bb3b9eaaf7cfad767493283",
      "metadataTypeId": 3
    },
    {
      "type": "enum errors::UserError",
      "concreteTypeId": "79552f475635af10ed8c2161c079f2b9b3bbfa38e29b3a584378d0c73d07685b",
      "metadataTypeId": 4
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 5
    },
    {
      "type": "enum std::option::Option<struct data_structures::campaign::Campaign>",
      "concreteTypeId": "3d7cb8d1ff0a03f778359c10eb57e2aae4d3e562636048ec723bb7e2dff67023",
      "metadataTypeId": 6,
      "typeArguments": [
        "c04f5e251834ef064a1f3aeab890cf987d1857ce760dcb26d6d4f22b4739f097"
      ]
    },
    {
      "type": "enum std::option::Option<struct data_structures::campaign_info::CampaignInfo>",
      "concreteTypeId": "cf448097fc46d709ceb6f842318f6312ee6ecf3608156affe90e8a8db1d2faa7",
      "metadataTypeId": 6,
      "typeArguments": [
        "9bb6522721c98dbb01aff41948aabd64771b71d2100e4b225a149ebff3ebed74"
      ]
    },
    {
      "type": "enum std::option::Option<struct data_structures::sign::Signs>",
      "concreteTypeId": "d6c7c25e757b1d387e413873a7fabef936b8213fa01e528e2b449f48ed22b948",
      "metadataTypeId": 6,
      "typeArguments": [
        "005b414c545d368a8dddf25b9a3d666f6d83bb37393c56c759ac16a5f4880a39"
      ]
    },
    {
      "type": "struct data_structures::campaign::Campaign",
      "concreteTypeId": "c04f5e251834ef064a1f3aeab890cf987d1857ce760dcb26d6d4f22b4739f097",
      "metadataTypeId": 8
    },
    {
      "type": "struct data_structures::campaign_info::CampaignInfo",
      "concreteTypeId": "9bb6522721c98dbb01aff41948aabd64771b71d2100e4b225a149ebff3ebed74",
      "metadataTypeId": 9
    },
    {
      "type": "struct data_structures::sign::Signs",
      "concreteTypeId": "005b414c545d368a8dddf25b9a3d666f6d83bb37393c56c759ac16a5f4880a39",
      "metadataTypeId": 10
    },
    {
      "type": "struct events::CancelledCampaignEvent",
      "concreteTypeId": "1aad302900ff1b5de6e2fa15a4ab4cdaeb2cec23ee7b84f2a86f1307a557c493",
      "metadataTypeId": 11
    },
    {
      "type": "struct events::CreatedCampaignEvent",
      "concreteTypeId": "4a233b0aea02180068efc24f3e5af15f4bac6e6933a80eaad47990b6a40e4783",
      "metadataTypeId": 12
    },
    {
      "type": "struct events::SignedEvent",
      "concreteTypeId": "3910a1b3007a2546e3e5298abedfa7c925cf44280b524328d7a3d46c3e706863",
      "metadataTypeId": 13
    },
    {
      "type": "struct events::SuccessfulCampaignEvent",
      "concreteTypeId": "a73b73180cfc87f8bb2c1268644bd63691a4aa4b59a260b651a77d6fc8db7f43",
      "metadataTypeId": 14
    },
    {
      "type": "struct events::UnsignedEvent",
      "concreteTypeId": "2f82680e819db01cdf00d1e5f61c1e060ad5b523f47edfef83c2f57b1d39e150",
      "metadataTypeId": 15
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "b256",
      "metadataTypeId": 0
    },
    {
      "type": "enum data_structures::campaign_state::CampaignState",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "Cancelled",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Successful",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Progress",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::CampaignError",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "CampaignEnded",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "CampaignHasBeenCancelled",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "DeadlineNotReached",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::CreationError",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "DeadlineMustBeInTheFuture",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum errors::UserError",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "SuccessfulCampaign",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "AlreadySigned",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "InvalidID",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "UnauthorizedUser",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "UserHasNotSigned",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "Address",
          "typeId": 16
        },
        {
          "name": "ContractId",
          "typeId": 17
        }
      ]
    },
    {
      "type": "enum std::option::Option",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "None",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Some",
          "typeId": 7
        }
      ],
      "typeParameters": [
        7
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 7
    },
    {
      "type": "struct data_structures::campaign::Campaign",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct data_structures::campaign_info::CampaignInfo",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "author",
          "typeId": 5
        },
        {
          "name": "state",
          "typeId": 1
        },
        {
          "name": "deadline",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "total_signs",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct data_structures::sign::Signs",
      "metadataTypeId": 10,
      "components": [
        {
          "name": "sign",
          "typeId": 18
        },
        {
          "name": "campaign_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::CancelledCampaignEvent",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "campaign_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::CreatedCampaignEvent",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "author",
          "typeId": 5
        },
        {
          "name": "campaign_info",
          "typeId": 9
        },
        {
          "name": "campaign_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::SignedEvent",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "campaign_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "user",
          "typeId": 5
        }
      ]
    },
    {
      "type": "struct events::SuccessfulCampaignEvent",
      "metadataTypeId": 14,
      "components": [
        {
          "name": "campaign_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "total_signs",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::UnsignedEvent",
      "metadataTypeId": 15,
      "components": [
        {
          "name": "campaign_id",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "user",
          "typeId": 5
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 16,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 17,
      "components": [
        {
          "name": "bits",
          "typeId": 0
        }
      ]
    },
    {
      "type": "u8",
      "metadataTypeId": 18
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "campaign_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "cancel_campaign",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "deadline",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "create_campaign",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "campaign_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "end_campaign",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "campaign_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "sign_petition",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "campaign_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "unsign_petition",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "campaign_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "user",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "campaign",
      "output": "3d7cb8d1ff0a03f778359c10eb57e2aae4d3e562636048ec723bb7e2dff67023",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "campaign_id",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "campaign_info",
      "output": "cf448097fc46d709ceb6f842318f6312ee6ecf3608156affe90e8a8db1d2faa7",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "user",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "sign_count",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "sign_history_index",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "user",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "signed",
      "output": "d6c7c25e757b1d387e413873a7fabef936b8213fa01e528e2b449f48ed22b948",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "total_campaigns",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "user",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "user_campaign_count",
      "output": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "8742946235045228304",
      "concreteTypeId": "79552f475635af10ed8c2161c079f2b9b3bbfa38e29b3a584378d0c73d07685b"
    },
    {
      "logId": "6475932288818496062",
      "concreteTypeId": "59df221b1082423e99f01b4031f103e0d02189049bb2f3df44c4f39ea3eeb745"
    },
    {
      "logId": "1922245568625580893",
      "concreteTypeId": "1aad302900ff1b5de6e2fa15a4ab4cdaeb2cec23ee7b84f2a86f1307a557c493"
    },
    {
      "logId": "13390072562516710654",
      "concreteTypeId": "b9d3180d4d8354fec9d767ca1d4144faf473449f3bb3b9eaaf7cfad767493283"
    },
    {
      "logId": "5342178501053257728",
      "concreteTypeId": "4a233b0aea02180068efc24f3e5af15f4bac6e6933a80eaad47990b6a40e4783"
    },
    {
      "logId": "12050351775094179832",
      "concreteTypeId": "a73b73180cfc87f8bb2c1268644bd63691a4aa4b59a260b651a77d6fc8db7f43"
    },
    {
      "logId": "4111964249968485702",
      "concreteTypeId": "3910a1b3007a2546e3e5298abedfa7c925cf44280b524328d7a3d46c3e706863"
    },
    {
      "logId": "3423413078268424220",
      "concreteTypeId": "2f82680e819db01cdf00d1e5f61c1e060ad5b523f47edfef83c2f57b1d39e150"
    }
  ],
  "messagesTypes": [],
  "configurables": []
};

const storageSlots: StorageSlot[] = [
  {
    "key": "d5fc2717907f1c2c65975ad0277a5d2d1d87b05057c1992c78218aeff2437f3a",
    "value": "0000000000000000000000000000000000000000000000000000000000000000"
  }
];

export class PetitionDappInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    cancel_campaign: FunctionFragment;
    create_campaign: FunctionFragment;
    end_campaign: FunctionFragment;
    sign_petition: FunctionFragment;
    unsign_petition: FunctionFragment;
    campaign: FunctionFragment;
    campaign_info: FunctionFragment;
    sign_count: FunctionFragment;
    signed: FunctionFragment;
    total_campaigns: FunctionFragment;
    user_campaign_count: FunctionFragment;
  };
}

export class PetitionDapp extends Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: PetitionDappInterface;
  declare functions: {
    cancel_campaign: InvokeFunction<[campaign_id: BigNumberish], void>;
    create_campaign: InvokeFunction<[deadline: BigNumberish], void>;
    end_campaign: InvokeFunction<[campaign_id: BigNumberish], void>;
    sign_petition: InvokeFunction<[campaign_id: BigNumberish], void>;
    unsign_petition: InvokeFunction<[campaign_id: BigNumberish], void>;
    campaign: InvokeFunction<[campaign_id: BigNumberish, user: IdentityInput], Option<CampaignOutput>>;
    campaign_info: InvokeFunction<[campaign_id: BigNumberish], Option<CampaignInfoOutput>>;
    sign_count: InvokeFunction<[user: IdentityInput], BN>;
    signed: InvokeFunction<[sign_history_index: BigNumberish, user: IdentityInput], Option<SignsOutput>>;
    total_campaigns: InvokeFunction<[], BN>;
    user_campaign_count: InvokeFunction<[user: IdentityInput], BN>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
